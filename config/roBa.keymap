#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        q {
            bindings = <&kp Q>;
            key-positions = <0 10>;
            layers = <0>;
        };

        mouse4 {
            bindings = <&mkp MB4>;
            key-positions = <18 30>;
            layers = <4>;
        };

        mouce5 {
            bindings = <&mkp MB5>;
            key-positions = <20 32>;
            layers = <4>;
        };

        lay2-muhwnkan {
            bindings = <&lt 2 INT_MUHENKAN>;
            key-positions = <37 38>;
        };

        henkan {
            bindings = <&kp INT_HENKAN>;
            key-positions = <40 41>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 6 TAB         &kp W         &kp E             &kp R         &kp T                                                           &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D             &kp F         &kp G        &kp ESCAPE                       &kp LEFT_BRACKET  &kp H        &kp J  &lt 5 K    &kp L    &lt_to_layer_0 4 MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V         &kp B        &kp LS(NUMBER_1)                 &kp AT_SIGN       &kp N        &kp M  &kp COMMA  &kp DOT  &lt 2 SLASH
&kp LCTRL         &kp LEFT_WIN  &kp INT_MUHENKAN  &kp LEFT_ALT  &lt 1 SPACE  &lt_to_layer_0 3 INT_HENKAN      &kp BACKSPACE     &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings =
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                      &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9      &kp NUMBER_0
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans        &trans        &trans         &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans        &trans        &kp SEMICOLON  &kp COLON         &mt RIGHT_SHIFT INT_RO
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                                                       &trans
            >;
        };

        FUNCTIOM {
            bindings = <
&kp RS(NUMBER_1)  &kp F2          &kp F3  &kp F4           &kp F5                      &kp F6         &kp F7                &kp F8         &mt F11 F9      &mt F12 F10
&kp RS(NUMBER_1)  &kp LEFT_ARROW  &trans  &kp RIGHT_ARROW  &trans  &trans      &trans  &trans         &kp RS(MINUS)         &kp RS(LCTRL)  &kp F11         &trans
&trans            &trans          &trans  &trans           &trans  &trans      &trans  &kp RS(COMMA)  &kp RS(GREATER_THAN)  &kp RS(SLASH)  &kp RS(INT_RO)  &trans
&trans            &trans          &trans  &trans           &trans  &trans      &trans  &trans                                                              &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp DELETE
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &kp LG(TAB)     &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(C_VOLUME_UP) LC(C_VOLUME_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &mkp MB3  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &trans    &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BULETOOTH {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
